/** global styles **/
@import './colors.scss';

.qq-text-bg-primary {
  background-color: #{map-get($qq-primary, 500)};
  color: #{map-get($qq-primary, '500-contrast')};
}
.qq-text-bg-accent {
  background-color: #{map-get($qq-accent, 500)};
  color: #{map-get($qq-accent, '500-contrast')};
}
.qq-text-bg-success {
  @extend .qq-text-bg-accent;
}
.qq-text-bg-red {
  background-color: #{map-get($qq-red, 500)};
  color: #{map-get($qq-red, '500-contrast')};
}
.qq-text-bg-danger {
  @extend .qq-text-bg-red;
}
.qq-text-bg-error {
  @extend .qq-text-bg-red;
}

@media print {
  .isPrinting > * { display: none; }
  .isPrinting app-print-layout { display: block; }
}
.ql-container {
  height: calc(100% - 64px) !important; 
}
.vertical-center {
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}
/* loading-spinner style */
#loading-spinner-cover {
  position:fixed;
  width: 100vw;
  height: 100vh;
  left:0;
  top:0;
  background-color: rgba(255,255,255,0);
  z-index:999999999;
  display:none;
}
/* loading-spinner styles end */
.ql-container {
  min-height: 15rem;
  height: 80%;
  flex: 1;
  display: flex;
  flex-direction: column;
}
.ql-editor {
  height: auto;
}
/*
  ng-bootstrap hardcodes ng-modal-backdrop's z-index to 1055, which is higher than
  the modal window's z-index. So until they fix it, force it back to 1050. Note that
  we don't change modal z-index as that would screw up the stacked modal incremental
  z-index logic.
*/
.modal-backdrop.show {
  z-index: 1050 !important;
}
/* 
Default z-index of 1030 is higher than material dialog backdrop's z-index
(1000). So we have to bring it lower than 1000. We can always set the dialog
backdrop's z-index to a higher value. But that would risk screwing up the the
stacked z-index algos. So we change the sidebar element's z-index. In any
case sidebar is not part ofa standard framework and be seen as part of our
app. So it makes further sense to tweak this than CDK's default backdrop
class z-index.
*/
.sidebar {
  z-index: 999;
}
.navbar.navbar-absolute {
  z-index: 999;
}
/*
 * Add this class to any element to 'shake' it for about a second. We use
 * this to indicate input error conditions such as login error, etc.
 */
.basic-shake {
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}
@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}
.mat-row .mat-cell {
  cursor: pointer;
}
/*
  Can be applied to any dropdownitem to indicate that it's selected.
  Use it as:

  <button ... [ngClass]="{'dropdown-item-checked': selectedFlag}" ></button>
*/
.dropdown-item-checked::before {
  position: absolute;
  left: 0.4rem;
  content: 'âœ“';
  font-weight: 600;
}

/*
Spaces children of a parent by .3 or .5 rem. So you can do like:
  <div class="me-1-children">
    <button></button>
    <button></button>
    <button></button>
    <input>
  </div>
And the consecutive children of the div, except the last, would have .3rem space
between them. Since we use global CSS selector, it would be applied to all
children.
 */
 .me-1-children > * {
  margin-right: 0.30rem;
}
.me-1-children > *:last-child {
  margin-right: 0 !important;
}
/* Same as above, but with .5rem space between the children. */
.me-2-children > * {
  margin-right: 0.50rem;
}
.me-2-children > *:last-child {
  margin-right: 0 !important;
}
/*
.mat-drawer-inner-container is the container element inside mat-sidenav.
The content inside <mat-sidenav> are placed inside this. By default it's
style is set to display: block; We change it to display: flex so that we
can position a sticky header & footer in the sidenav. Header is the 
space for white-label brand and footer is where we display the QQDEN
version along with a message 'Powered by QQDEN' if the app is being used
by a white-labelled client.

Prefixing the style with parent .app-container ensures that this style
is only applied to the app's main mat-sidenav and any other mat-sidenav
that we may employ in an child view.

It's important to note that this is a hack as this CSS class is internal
to @angular/material and therefore subject to change.
*/
.app-container .mat-drawer-inner-container {
  display: flex;
  flex-direction: column;  
}
